/* eslint-disable @next/next/no-img-element */
import { Clock, Star } from "iconsax-react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useCallback, useEffect, useState } from "react";
import { useSelector } from "react-redux";
import useSWR, { mutate } from "swr";
import { Movie, MoviesDetails, TMDBResponse, TvDetails } from "../../../typing";
import Cast from "../../components/details/Cast";
import Genres from "../../components/details/Genres";
import MediaCard from "../../components/details/MediaCard";
import RecommendedCard from "../../components/details/RecommendedCard";
import ReviewCard from "../../components/details/ReviewCard";
import Seasons from "../../components/details/Seasons";
import SimilarCard from "../../components/details/SimilarCard";
import { config } from "../../utils/tmdb";

const Details = () => {
  const router = useRouter();
  const movie: Movie = useSelector((state: any) => state.details.details);

  const { data } = useSWR(`${config.BASE_URL}${movie?.type}/${movie?.id}?api_key=${config.API_KEY}&language=en-US`)

  // const [data, setData] = useState<MoviesDetails | TvDetails | null>(null);
  const [loading, setLoading] = useState<boolean>(false);
  const rating = movie?.vote_average! / 2;

  // const getData = useCallback(async () => {
  //   setData(null);
  //   setLoading(true);
  //   const res = await mutate(
  //     `${config.BASE_URL}${movie?.type}/${movie?.id}?api_key=${config.API_KEY}&language=en-US`
  //   );

  //   setData(res);
  //   setLoading(false);
  // }, [movie?.id, movie?.type]);

  // useEffect(() => {
  //   getData();
  // }, [getData, router.query.pid]);

  return (
    <div className="overflow-y-scroll h-full relative">
      <Head>
        <title>{movie?.title ?? movie?.name ?? movie?.original_title}</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          href={`${
            config.IMAGE_URL + movie?.backdrop_path ?? movie?.poster_path
          }`}
        />
      </Head>

      <MediaCard
        backdrop_path={movie?.backdrop_path!}
        id={movie?.id!}
        poster_path={movie?.poster_path!}
        type={movie?.type!}
      />

      <div className="w-full p-[15px] bg-neutral-900">
        <span className="flex items-center justify-between">
          <p className="text-3xl text-white font-bold">
            {movie?.title! ?? movie?.name! ?? movie?.original_title!}
          </p>

          {movie?.release_date && (
            <span className="flex text-white items-center">
              <Clock variant="Bold" size={18} className="text-neutral-600" />{" "}
              <p className="pl-1 text-sm text-neutral-600">
                {movie?.release_date}
              </p>
            </span>
          )}
        </span>

        {rating && (
          <span className="flex text-white items-center">
            <Star variant="Bold" className="text-yellow-500" />{" "}
            <p className="pl-1 text-sm">{rating} Rating</p>
          </span>
        )}
        <p className="text-sm text-white py-2">{movie?.overview!}</p>
        <Genres ids={movie?.genre_ids} />

        <Cast id={movie?.id!} />

        {movie?.type === "tv" && (
          <Seasons
            id={movie?.id!}
            seasons={(data as TvDetails)?.seasons!}
            number_of_seasons={(data as TvDetails)?.number_of_seasons}
          />
        )}

        <ReviewCard id={movie?.id!} type={movie?.type!} />
        <RecommendedCard id={movie?.id!} />
        <SimilarCard id={movie?.id!} />
      </div>
    </div>
  );
};

export default Details;
